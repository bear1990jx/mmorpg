
ext {
    profile = System.getProperty("env") ?: "dev"
    println "[current profile]:" + profile

	nettyVersion         = "4.1.33.Final"
	minaVersion 		 = "2.0.7"
    springBootVersion 	 = '2.4.0'
    gsonVersion 		 = "2.8.0"
    mysqlVersion 		 = "5.1.6"
	jacksonVersion		 = "1.8.5"
	protostuffVersion    = "1.5.9"
	protobufVersion 	 = "1.11.7"
}

allprojects {
	group = "com.kingston.mmorpg"
	version = 1.0
	apply plugin: "eclipse"
	apply plugin: "idea"
}

subprojects {
	ext.configDir = new File(rootDir, "check")
	//apply from: "$rootDir/check/checkstyle/checkstyle.gradle"
	//apply from: "$rootDir/check/pmd/pmd.gradle"
}


configure(allprojects) { project ->

	apply plugin: "java"

	def commonCompilerArgs =
			["-Xlint:serial", "-Xlint:cast", "-Xlint:classfile", "-Xlint:dep-ann",
			 "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
			 "-Xlint:path", "-Xlint:processing", "-Xlint:static", "-Xlint:try", "-Xlint:-options"]

	//"-Xlint:deprecation", "-Werror"
	compileJava.options*.compilerArgs = commonCompilerArgs +
			["-Xlint:varargs", "-Xlint:fallthrough", "-Xlint:rawtypes",
			  "-Xlint:unchecked"]

	compileTestJava.options*.compilerArgs = commonCompilerArgs +
			["-Xlint:-varargs", "-Xlint:-fallthrough", "-Xlint:-rawtypes",
			 "-Xlint:-deprecation", "-Xlint:-unchecked"]

	compileJava {
		sourceCompatibility = JavaVersion.VERSION_15
		targetCompatibility = JavaVersion.VERSION_15
		options.encoding = "UTF-8"
	}

	compileTestJava {
		sourceCompatibility = JavaVersion.VERSION_15
		targetCompatibility = JavaVersion.VERSION_15
		options.encoding = "UTF-8"
		options.compilerArgs += "-parameters"
	}

	repositories {
	  	jcenter()
	    mavenLocal()
	    mavenCentral()
	}

	eclipse {
	    classpath {
	        downloadJavadoc = false
	        downloadSources = true
	    }
	}


	dependencies {

		compileOnly 'org.projectlombok:lombok:1.18.6'
		annotationProcessor 'org.projectlombok:lombok:1.18.6'
	
		compile  'org.projectlombok:lombok:1.16.12'	
		
		compile ("com.google.code.gson:gson:${gsonVersion}")

		compile ("io.netty:netty-all:${nettyVersion}")

		compile ("org.apache.mina:mina-core:${minaVersion}")

		compile ("org.codehaus.jackson:jackson-core-asl:${jacksonVersion}")
		compile ("org.codehaus.jackson:jackson-mapper-asl:${jacksonVersion}")

		compile ("com.baidu:jprotobuf:${protobufVersion}")

		compile ("io.protostuff:protostuff-core:${protostuffVersion}")
		compile ("io.protostuff:protostuff-runtime:${protostuffVersion}")

		compile ("mysql:mysql-connector-java:${mysqlVersion}")	
		
		compile 'org.apache.commons:commons-lang3:3.1'	
		
		compile 'org.codehaus.groovy:groovy-all:2.4.11'

		compile 'com.google.guava:guava:30.1-jre'

	    testCompile 'junit:junit:4.12'
	}


	// apply plugin: 'findbugs'

	// findbugs {
	// 	toolVersion == '2.0.1'
	// 	ignoreFailures = true
	// 	effort = 'max'
	// }

	// tasks.withType(FindBugs) {
	// 	reports {
	// 		xml.enabled = false
	// 		html.enabled = true
	// 	}
	// }

}






